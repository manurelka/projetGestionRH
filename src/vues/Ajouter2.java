package vues;

import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.GroupLayout;
import javax.swing.LayoutStyle;
import javax.swing.SwingConstants;
import javax.swing.border.EmptyBorder;

import reader_writer.IHMCompetencesAccessor;
import ressources.Competence;
import ressources.DomaineCompetences;
import ressources.ListeCompetences;
import ressources.ModifEvenement;

public class Ajouter2 extends PanelCompetences {

    /**
     * Creates new form Modifier
     */
    public Ajouter2() {
        initCompetences();
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {
    	//Le titre de la vue
    	jlab_titre = new javax.swing.JLabel();
    	//Le panel principal
        jpan_general = new javax.swing.JPanel();
        
        //Le feedback
    	jlab_feedback = new javax.swing.JLabel();
        
        //Le panel d'ajout
        jpan_ajout = new javax.swing.JPanel();
        //Le panel de domaine
        jpan_domaine = new javax.swing.JPanel();
        //Le libellé du combo box de choix de domaine
        jlab_domaine = new javax.swing.JLabel();
        //Combo box de choix de domaine
        jcombo_domaines = new javax.swing.JComboBox(DOMAINES);
        //Le champ de texte pour choisir le libellé en anglais
        jtf_libelleGB = new javax.swing.JTextField();
        //Le champ de texte pour choisir le libellé en français
        jtf_libelleFR = new javax.swing.JTextField();
        //Le bouton de validation
        jbtn_valider = new javax.swing.JButton();
        
        //Libellés
        jlab_titre.setText(TITRE);
        jlab_titre.setFont(new java.awt.Font("Tahoma", 1, 14));
        jlab_feedback.setText(FEEDBACK);
        jlab_domaine.setText(jlab_domaine_TEXTE);

        //Text fields
        jtf_libelleGB.setText(libGB_TEXTE);
        jtf_libelleFR.setText(libFR_TEXTE);
        
        //Bouton
        jbtn_valider.setText(btnValider_TEXTE);
        
        //Combo box
        jcombo_domaines.setSelectedItem(DomaineCompetences.UNDEFINED);

        //Layout
        this.setLayout(new BorderLayout(20, 20));
        this.add(jlab_titre, BorderLayout.NORTH);
        this.add(jpan_general, BorderLayout.CENTER);
        
        jpan_general.setLayout(new BorderLayout(20, 20));
        jpan_general.add(jpan_ajout, BorderLayout.NORTH);
        jpan_general.setBorder(new EmptyBorder(10, 20, 20, 20));
        
        jpan_domaine.setLayout(new GridLayout(1, 2));
        jpan_domaine.add(jlab_domaine);
        jpan_domaine.add(jcombo_domaines);
        jpan_domaine.setBorder(new EmptyBorder(10, 0, 10, 0));
        
        GroupLayout layoutAjout = new GroupLayout(jpan_ajout);
        jpan_ajout.setLayout(layoutAjout);
        
        layoutAjout.setVerticalGroup(
        		layoutAjout.createSequentialGroup()
        		.addComponent(jlab_feedback)
        		.addComponent(jpan_domaine)
        		.addComponent(jtf_libelleGB)
        		.addGroup(layoutAjout.createParallelGroup(GroupLayout.Alignment.BASELINE)
 		           .addComponent(jtf_libelleFR, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
 		           .addComponent(jbtn_valider, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
     	);
        
        layoutAjout.setHorizontalGroup(
        		layoutAjout.createSequentialGroup()
		      .addGroup(layoutAjout.createParallelGroup(GroupLayout.Alignment.LEADING)
		    		.addComponent(jlab_feedback)
		           .addComponent(jpan_domaine, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
		           .addComponent(jtf_libelleGB, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
		           .addComponent(jtf_libelleFR, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
		      .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
		      .addComponent(jbtn_valider)
		);
        
        jbtn_valider.setMinimumSize(new Dimension(180, 15));
        
        //Ecouteurs d'événement
        jbtn_valider.addActionListener(new ActionListener(){
			@Override
			public void actionPerformed(ActionEvent evt) {
				jbtn_validerActPerf(evt);
			}
        });
        
    }// </editor-fold>       
    

    // Variables declaration - do not modify                     
    private javax.swing.JLabel jlab_titre;
    private javax.swing.JPanel jpan_general;
    private javax.swing.JLabel jlab_feedback;
    
    private javax.swing.JPanel jpan_ajout;
    private javax.swing.JPanel jpan_domaine;
    private javax.swing.JLabel jlab_domaine;
    private javax.swing.JComboBox jcombo_domaines;
    private javax.swing.JTextField jtf_libelleGB;
    private javax.swing.JTextField jtf_libelleFR;
    private javax.swing.JButton jbtn_valider;
    
    //Libellés
    private final String TITRE = "Ajouter une compétence";
    private final String FEEDBACK = "";
    private final String jlab_domaine_TEXTE = "Choisir le domaine de la nouvelle compétence : ";
    private final String libGB_TEXTE = "Libellé en anglais...";
    private final String libFR_TEXTE = "Libellé en français...";
    private final String btnValider_TEXTE = "Valider";
    
    // End of variables declaration
    
    /**
     * Enrégistrer une nouvelle compétence dans la liste des compétences
     * @param evt
     */
    public void jbtn_validerActPerf(ActionEvent evt){
    	
    	if (jtf_libelleGB.getText().trim().equals("") || jtf_libelleGB.getText().trim().equals(libGB_TEXTE) || jtf_libelleFR.getText().trim().equals("") || jtf_libelleGB.getText().trim().equals(libFR_TEXTE) ){
    		jlab_feedback.setText("Ajoutez au moins un libellé pour votre compétence.");
    		
    	} else if (jcombo_domaines.getSelectedItem().equals(DomaineCompetences.UNDEFINED)) {
    		jlab_feedback.setText("Selectionnez un domaine pour votre compétence.");
    		
    	} else {
    		ajouter(new Competence((DomaineCompetences) jcombo_domaines.getSelectedItem(), jtf_libelleGB.getText(), jtf_libelleFR.getText()));
	    	jtf_libelleGB.setText(libGB_TEXTE);
	        jtf_libelleFR.setText(libFR_TEXTE);
	        jcombo_domaines.setSelectedItem(DomaineCompetences.UNDEFINED);
	        jlab_feedback.setText("La nouvelle compétence a bien été joutée à la liste. Veuillez vérifier la liste des compétences.");
    	}
    	
    	this.repaint();
    }

	@Override
	public void reagir(ModifEvenement evt) {
		this.repaint();
	}
}